ply : lex yacc PY

lex : lentries

lentries : lentries lentry
         | lentry

lentry : lFunc
       | lVar

lVar : LITERALS '=' STR
     | LITERALS '=' list
     | IGNORE '=' STR
     | TOKENS '=' list
     | RESERVED '=' dict

list : '[' lCont ']'

lCont : lCont ',' elem
      | elem

elem : STR
     | LIT

dict : '{' dictElems '}'

dictElems : dictElems ',' dictElem
          | dictElem

dictElem : elem ':' elem

lFunc : STR RETURN '(' STR ',' res ')'
      | STR ERROR '(' STR ',' RES ')'

res : RES
    | type '(' RES ')'

type : INT
     | FLOAT

yacc : yentries

yentries : yentries yentry
         | yentry

yentry : yvar
       | rules RES
       | gvar


yvar : PRECEDENCE '=' precedenceList

precedenceList : '[' precedenceElems ']'

precedenceElems : precedenceElems ',' precedenceElem
                | precedenceElem

precedenceElem : '(' lStr ')'

gvar : ID '=' RES

rules : ID ':' syms

syms : syms sym
     | sym

sym : UCASE
    | ID
    | LIT
          