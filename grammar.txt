ply : lex yacc PY

lex : lentries

lentries : lentries lentry
         | 

lentry : '%' lVar
      | lFunc

lVar : LITERALS '=' STR
     | LITERALS '=' '[' lStr ']'
     | IGNORE '=' STR
     | TOKENS '=' '[' lStr ']'

lStr : lStr ',' STR
     | STR

lFunc : STR RETURN '(' STR ',' res ')'
      | STR ERROR '(' STR ',' RES ')'

res : type '(' RES ')'
    | RES

type : INT
     | FLOAT

yacc : precedences symboltable rules

precedences : PRECEDENCE '=' '[' lPrecedencesElem ']'

lPrecedencesElem : lPrecedencesElem , precedencesElem
                  | precedencesElem

precedencesElem : '(' LStr ')'

symboltable : TEXT '=' '{' RES '}'

rules : SNT ':' syms

syms : syms sym
     | sym

sym : ST
    | SNT
    | STR
          